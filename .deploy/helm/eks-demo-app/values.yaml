# Default values for eks-demo-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker.io/ankursoni/eks-demo
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations:
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    eks.amazonaws.com/role-arn: arn:aws:iam::<AWS ACCOUNT ID>:role/eks-secrets-manager-role
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

env:
  # - name: AWS_REGION
  #   value: "<AWS REGION>"
  # - name: AWS_S3_BUCKET
  #   value: "<AWS S3 BUCKET>"
  # - name: REDIS_HOST
  #   value: "eks-demo-app-redis"

secretEnv:
  # - name: DB_CONNECTION_URL
  #   value: "mysql+mysqldb://<DATABASE MASTERDB USERNAME>:<DATABASE MASTERDB PASSWORD>@<RDS DATABASE ENDPOINT DNS>/demodb"
  # - name: AWS_ACCESS_KEY_ID
  #   value: "<AWS ACCESS KEY ID>"
  # - name: AWS_SECRET_ACCESS_KEY
  #   value: "<AWS SECRET ACCESS KEY>"

awsCloudWatch:
  enabled: false
  awsRegion: "<AWS REGION>"
  eksClusterName: "<EKS CLUSTER NAME>"

awsSecretsManager:
  enabled: false
  awsSecretName: "<AWS SECRET NAME>"

securityGroup:
  # Optionally, enable Security Groups for Pods
  # Reference: https://docs.aws.amazon.com/eks/latest/userguide/security-groups-for-pods.html
  enabled: false
  default: ""

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: "alb"
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls:
    # - secretName: eks-demo-app-tls
    #   hosts:
    #     - chart-example.local

awsLoadBalancerController:
  enabled: false
  serviceAccountAnnotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::<AWS ACCOUNT ID>:role/eks-load-balanacer-role

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 400m
    memory: 512Mi
  requests:
    cpu: 200m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
